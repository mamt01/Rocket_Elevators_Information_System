Elevators:
    t.references :column
    t.integer :serial_number
    t.string :model_type
    t.string :building_type
    t.string :status
    t.date :date_of_instal
    t.date :date_of_inspect
    t.string :inspect_certificate
    t.text :information
    t.text :notes

Columns:
      t.references :battery
      t.integer :battery_id
      t.string :building_type
      t.integer :number_of_floors
      t.string :status
      t.text :information
      t.text :notes

Batteries
    t.references :building
    t.string :building_type
    t.string :status
    t.integer :employee_id
    t.date :date_of_instal
    t.date :date_of_inspect
    t.integer :inspect_certificate
    t.text :Information
    t.text :notes

Buildings
    t.references :address
    t.references :customer
    t.string :building_address
    t.string :full_name_admin_person
    t.string :email_admin_person
    t.string :phone_number_admin_person
    t.string :full_name_tech_person
    t.string :email_tech_person
    t.string :phone_number_tech_person

Building details:
    t.references :building
    t.integer :info_key
    t.integer :value

Customers:
    t.references :address
    t.references :user
    t.date :date_of_creation
    t.string :company_name
    t.string :company_hq_adress
    t.string :full_name_contact_person
    t.string :phone_number_contact_person
    t.string :email_contact_person
    t.text :company_description
    t.string :full_name_service_person
    t.string :phone_number_service_person
    t.string :email_service_person

Addresses:
    t.string :address_type
    t.string :status
    t.string :entity
    t.string :number_street
    t.string :apt_number
    t.string :city
    t.string :postal_code
    t.string :country
    t.text :notes

Leads
    t.references :customer
    t.string :full_name
    t.string :company_name
    t.string :email
    t.string :phone_number
    t.string :project_name
    t.text :project_description
    t.string :department_in_charge
    t.text :message
    t.binary :attachment
    t.timestamps



class LeadsController < ApplicationController
  before_action :set_lead, only: [:show, :edit, :update, :destroy]

  # GET /leads
  # GET /leads.json
  def index
    @leads = Lead.all
  end

  # GET /leads/1
  # GET /leads/1.json
  def show
  end

  # GET /leads/new
  def new
    @lead = Lead.new
  end

  # GET /leads/1/edit
  def edit
  end

  # POST /leads
  # POST /leads.json
  def create
    @lead = Lead.new(lead_params)

    respond_to do |format|
      if @lead.save
        format.html { redirect_to "/index#contact"}
        format.json { render :show, status: :created, location: @lead }
      else
        format.html { render :new }
        format.json { render json: @lead.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /leads/1
  # PATCH/PUT /leads/1.json
  def update
    respond_to do |format|
      if @lead.update(lead_params)
        format.html { redirect_to "/index#contact", notice: 'Lead was successfully updated.' }
        format.json { render :show, status: :ok, location: @lead }
      else
        format.html { render :edit }
        format.json { render json: @lead.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /leads/1
  # DELETE /leads/1.json
  def destroy
    @lead.destroy
    respond_to do |format|
      format.html { redirect_to "/index#contact", notice: 'Lead was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_lead
      @lead = Lead.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def lead_params
      params.require(:lead).permit(:full_name, :company_name, :email, :phone_number, :project_name, :project_description, :department_in_charge, :message, :attachment)
    end
end
